@using AntDesign
@using GameManagement.CoreConfig
@using GameManagement.Share.Extension
@using GameManagement.Share.Model.ViewModel
@using GameManagement.SpecialComponent
@using GameManagement.SpecialComponent.ExtensionClass
@using static GameManagement.Share.Extension.MessageEnumExtension
@using Microsoft.AspNetCore.Components.Forms

<Row Gutter="8">
    <AntDesign.Col Span="14">
        <Table TItem="GameCompanyViewModel" DataSource="ViewModels"
               Class="table-striped" ScrollY="@ScrollY" ScrollBarWidth="@DefaultTableConfig.ScrollBarWidth"
               Loading="loading"
               OnRowClick="OnRowClick"
               @ref="table">
            <Column @bind-Field="context.Stt" Width="60" Title="Stt"></Column>
            <Column @bind-Field="context.Name" Title="Tên hãng"></Column>
            <Column @bind-Field="context.Country" Title="Quốc gia">
                <Template>
                    @CommonTemplate.RenderNationalityText(context.Country)
                </Template>
            </Column>
            <Column @bind-Field="context.Description" Title="Giới thiệu ngắn" Width="250"></Column>
            <Column @bind-Field="context.Status" Title="Trạng thái">
                <Template>
                    @CommonTemplate.RenderStatusText(context.Status)
                </Template>
            </Column>
        </Table>
    </AntDesign.Col>
    <AntDesign.Col Span="10">
        <Row Gutter="8">
            <Space Size="@SpaceSize.Small">
                @if (EditModel.ReadOnly)
                {
                    <SpaceItem><Button OnClick="Add" Type="@ButtonType.Primary" Color="Color.Green7" Icon="plus">Thêm mới</Button></SpaceItem>
                    @if (SelectModel != null)
                    {
                        <SpaceItem><Button OnClick="Edit" Type="@ButtonType.Primary" Icon="edit">Sửa</Button></SpaceItem>
                    }
                }
                @if (!EditModel.ReadOnly)
                {
                    <SpaceItem>
                        <Button OnClick="SaveAsync" Type="@ButtonType.Primary" Color="Color.Green7" Icon="save">Lưu</Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Popconfirm OnConfirm="() => Cancel()"
                                    OkText="Đồng ý"
                                    CancelText="Hủy">
                            <ChildContent>
                                <Button Icon="close" Type="@ButtonType.Primary" Danger>Hủy</Button>
                            </ChildContent>
                            <TitleTemplate>
                                @OperationEnum.AreYouSureCancel
                            </TitleTemplate>
                        </Popconfirm>
                    </SpaceItem>
                }
                @if (EditModel.ReadOnly)
                {
                    @*  @if (SelectModel != null)
                    {
                        <SpaceItem>
                            <Popconfirm Placement="@Placement.LeftBottom"
                                        OnConfirm="() => DeleteAsync(SelectModel)"
                                        OkText="Đồng ý"
                                        CancelText="Hủy">
                                <ChildContent>
                                    <Button Class="btn-delete" Icon="delete">Xóa</Button>
                                </ChildContent>
                                <TitleTemplate>
                                    @OperationEnum.AreYouSureToDelete
                                </TitleTemplate>
                            </Popconfirm>
                        </SpaceItem>
                    } *@
                }
            </Space>
        </Row>
        <Row Gutter="8">
            <AntDesign.Col Span="24">
                <EditForm Model="EditModel">
                    <DataAnnotationsValidator />
                    <InputWatcher @ref="inputWatcher"></InputWatcher>
                    <AntDesign.Col Span="24">
                        <LabelFor FieldIdentifier="context.Field(EditModel.Property.NameProperty(c => c.Name))"></LabelFor>
                        <Input @bind-Value="EditModel.Name" Disabled="EditModel.ReadOnly" />
                        <ValidationMessage For="() => EditModel.Name"></ValidationMessage>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24">
                        <LabelFor FieldIdentifier="context.Field(EditModel.Property.NameProperty(c => c.Country))"></LabelFor>
                        <Select TItemValue="string" TItem="SelectItem" EnableSearch
                                DataSource="NationalOptions"
                                LabelName="@nameof(SelectItem.Text)"
                                ValueName="@nameof(SelectItem.Value)"
                                @bind-Value="EditModel.Country" Disabled="EditModel.ReadOnly">
                        </Select>
                        <ValidationMessage For="() => EditModel.Country"></ValidationMessage>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24">
                        <LabelFor FieldIdentifier="context.Field(EditModel.Property.NameProperty(c => c.Description))"></LabelFor>
                        <TextArea @bind-Value="EditModel.Description" MinRows="4" Disabled="EditModel.ReadOnly"></TextArea>
                        <ValidationMessage For="() => EditModel.Description"></ValidationMessage>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24">
                        <LabelFor FieldIdentifier="context.Field(EditModel.Property.NameProperty(c => c.Status))"></LabelFor>
                        <Select TItemValue="string" TItem="SelectItem" EnableSearch
                                DataSource="StatusOptions"
                                LabelName="@nameof(SelectItem.Text)"
                                ValueName="@nameof(SelectItem.Value)"
                                @bind-Value="EditModel.Status" Disabled="EditModel.ReadOnly">
                        </Select>
                        <ValidationMessage For="() => EditModel.Description"></ValidationMessage>
                    </AntDesign.Col>
                </EditForm>
            </AntDesign.Col>
        </Row>
    </AntDesign.Col>
</Row>
